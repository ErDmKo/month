load("@aspect_rules_esbuild//esbuild:defs.bzl", "esbuild")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project", "ts_config")

package(default_visibility = ["//visibility:public"])

exports_files([".swcrc"])

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = [":__subpackages__"],
)

ts_project(
    name = "utils",
    srcs = glob(["utils/**/*.ts"]),
    declaration = True
)

ts_project(
    name = "tetris",
    srcs = glob(["tetris-effect.ts", "tetris/**/*.ts"]),
    declaration = True,
    deps = [
      ":utils"
    ]
)

esbuild(
    name = "tetris-bundle",
    entry_point = "tetris-effect.ts",
    metafile = False,
    minify = True,
    target = "esnext",
    tsconfig = ":tsconfig",
    sourcemap = False,
    deps = [
        ":tetris",
    ],
)

ts_project(
    name = "snowflake",
    srcs = glob(["snowflake-effect.ts", "snowflake/**/*.ts"]),
    declaration = True,
    deps = [
      ":utils"
    ]
)

esbuild(
    name = "snowflake-bundle",
    entry_point = "snowflake-effect.ts",
    metafile = False,
    minify = True,
    target = "esnext",
    sourcemap = False,
    tsconfig = ":tsconfig",
    deps = [
        ":snowflake",
    ],
)

ts_project(
    name = "tennis",
    srcs = glob(["tennis-effect.ts", "tennis/**/*.ts"]),
    declaration = True,
    deps = [
      ":utils"
    ]
)

esbuild(
    name = "tennis-bundle",
    entry_point = "tennis-effect.ts",
    bundle = True,
    metafile = False,
    minify = True,
    target = "esnext",
    sourcemap = False,
    tsconfig = ":tsconfig",
    deps = [
        ":tennis",
    ],
)

ts_project(
    name = "month",
    srcs = glob(["month-effect.ts", "month/**/*.ts"]),
    declaration = True,
    deps = [
      ":utils"
    ]
)

esbuild(
    name = "month-bundle",
    entry_point = "month-effect.ts",
    metafile = False,
    minify = True,
    target = "esnext",
    sourcemap = False,
    tsconfig = ":tsconfig",
    deps = [
        ":month",
    ],
)

filegroup(
    name = "metrika",
    srcs = ["mc.js"],
)
